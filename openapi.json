{
  "openapi": "3.1.0",
  "info": {
    "title": "Clowder",
    "description": "A cloud native data management framework to support any research domain. Clowder was developed to help researchers and scientists in data intensive domains manage raw data, complex metadata, and automatic data pipelines. ",
    "contact": {
      "name": "Clowder",
      "url": "https://clowderframework.org/"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "2.0.0-beta.2"
  },
  "paths": {
    "/api/v2/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Users",
        "operationId": "get_users_api_v2_users_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 2
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Save User",
        "operationId": "save_user_api_v2_users_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/login": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Login",
        "operationId": "login_api_v2_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/me/is_admin": {
      "get": {
        "tags": [
          "login"
        ],
        "summary": "Get Admin",
        "operationId": "get_admin_api_v2_users_me_is_admin_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Get Admin Api V2 Users Me Is Admin Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/users/me/admin_mode": {
      "get": {
        "tags": [
          "login"
        ],
        "summary": "Get Admin Mode",
        "description": "Get Admin mode from User Object.",
        "operationId": "get_admin_mode_api_v2_users_me_admin_mode_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Get Admin Mode Api V2 Users Me Admin Mode Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Set Admin Mode",
        "description": "Set Admin mode from User Object.",
        "operationId": "set_admin_mode_api_v2_users_me_admin_mode_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "boolean",
              "title": "Admin Mode On"
            },
            "name": "admin_mode_on",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Set Admin Mode Api V2 Users Me Admin Mode Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/users/set_admin/{useremail}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Set Admin",
        "operationId": "set_admin_api_v2_users_set_admin__useremail__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Useremail"
            },
            "name": "useremail",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/users/revoke_admin/{useremail}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Revoke Admin",
        "operationId": "revoke_admin_api_v2_users_revoke_admin__useremail__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Useremail"
            },
            "name": "useremail",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/users/enable_readonly/{useremail}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Enable Readonly User",
        "operationId": "enable_readonly_user_api_v2_users_enable_readonly__useremail__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Useremail"
            },
            "name": "useremail",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/users/disable_readonly/{useremail}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Disable Readonly User",
        "operationId": "disable_readonly_user_api_v2_users_disable_readonly__useremail__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Useremail"
            },
            "name": "useremail",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/users/enable/{useremail}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "User Enable",
        "operationId": "user_enable_api_v2_users_enable__useremail__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Useremail"
            },
            "name": "useremail",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/users/disable/{useremail}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "User Disable",
        "operationId": "user_disable_api_v2_users_disable__useremail__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Useremail"
            },
            "name": "useremail",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/users/keys": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User Api Keys",
        "description": "List all api keys that user has created\n\nArguments:\n    skip: number of page to skip\n    limit: number to limit per page",
        "operationId": "get_user_api_keys_api_v2_users_keys_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Generate User Api Key",
        "description": "Generate an API key that confers the user's privileges.\n\nArguments:\n    name: name of the api key\n    mins: number of minutes before expiration (0 for no expiration)",
        "operationId": "generate_user_api_key_api_v2_users_keys_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            },
            "name": "name",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Mins",
              "default": 30
            },
            "name": "mins",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Generate User Api Key Api V2 Users Keys Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/users/keys/{key_id}": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User Api Key",
        "description": "Delete API keys given ID\n\nArguments:\n    key_id: id of the apikey",
        "operationId": "delete_user_api_key_api_v2_users_keys__key_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key Id"
            },
            "name": "key_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAPIKeyOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/users/search": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Search Users",
        "operationId": "search_users_api_v2_users_search_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text"
            },
            "name": "text",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 2
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/users/prefixSearch": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Search Users Prefix",
        "operationId": "search_users_prefix_api_v2_users_prefixSearch_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Prefix"
            },
            "name": "prefix",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 2
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/users/profile": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Profile",
        "operationId": "get_profile_api_v2_users_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User",
        "operationId": "get_user_api_v2_users__user_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/users/username/{username}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User By Name",
        "operationId": "get_user_by_name_api_v2_users_username__username__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            },
            "name": "username",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/authorizations/datasets/{dataset_id}": {
      "post": {
        "tags": [
          "authorization"
        ],
        "summary": "Save Authorization",
        "description": "Save authorization info in Mongo. This is a triple of dataset_id/user_id/role/group_id.",
        "operationId": "save_authorization_api_v2_authorizations_datasets__dataset_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/authorizations/datasets/{dataset_id}/role": {
      "get": {
        "tags": [
          "authorization"
        ],
        "summary": "Get Dataset Role",
        "description": "Retrieve role of user for a specific dataset.",
        "operationId": "get_dataset_role_api_v2_authorizations_datasets__dataset_id__role_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/authorizations/datasets/{dataset_id}/role/viewer}": {
      "get": {
        "tags": [
          "authorization"
        ],
        "summary": "Get Dataset Role Viewer",
        "description": "Used for testing only. Returns true if user has viewer permission on dataset, otherwise throws a 403 Forbidden HTTP exception.\nSee `routers/authorization.py` for more info.",
        "operationId": "get_dataset_role_viewer_api_v2_authorizations_datasets__dataset_id__role_viewer__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/authorizations/datasets/{dataset_id}/role/owner}": {
      "get": {
        "tags": [
          "authorization"
        ],
        "summary": "Get Dataset Role Owner",
        "description": "Used for testing only. Returns true if user has owner permission on dataset, otherwise throws a 403 Forbidden HTTP exception.\nSee `routers/authorization.py` for more info.",
        "operationId": "get_dataset_role_owner_api_v2_authorizations_datasets__dataset_id__role_owner__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/authorizations/files/{file_id}/role": {
      "get": {
        "tags": [
          "authorization"
        ],
        "summary": "Get File Role",
        "description": "Retrieve role of user for an individual file. Role cannot change between file versions.",
        "operationId": "get_file_role_api_v2_authorizations_files__file_id__role_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleType"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/authorizations/metadata/{metadata_id}/role}": {
      "get": {
        "tags": [
          "authorization"
        ],
        "summary": "Get Metadata Role",
        "description": "Retrieve role of user for group. Group roles can be OWNER, EDITOR, or VIEWER (for regular Members).",
        "operationId": "get_metadata_role_api_v2_authorizations_metadata__metadata_id__role__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Metadata Id"
            },
            "name": "metadata_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationMetadata"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/authorizations/groups/{group_id}/role": {
      "get": {
        "tags": [
          "authorization"
        ],
        "summary": "Get Group Role",
        "description": "Retrieve role of user on a particular group (i.e. whether they can change group memberships).",
        "operationId": "get_group_role_api_v2_authorizations_groups__group_id__role_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Group Id"
            },
            "name": "group_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleType"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/authorizations/datasets/{dataset_id}/group_role/{group_id}/{role}": {
      "post": {
        "tags": [
          "authorization"
        ],
        "summary": "Set Dataset Group Role",
        "description": "Assign an entire group a specific role for a dataset.",
        "operationId": "set_dataset_group_role_api_v2_authorizations_datasets__dataset_id__group_role__group_id___role__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Group Id",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "name": "group_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RoleType"
            },
            "name": "role",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/authorizations/datasets/{dataset_id}/user_role/{username}/{role}": {
      "post": {
        "tags": [
          "authorization"
        ],
        "summary": "Set Dataset User Role",
        "description": "Assign a single user a specific role for a dataset.",
        "operationId": "set_dataset_user_role_api_v2_authorizations_datasets__dataset_id__user_role__username___role__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            },
            "name": "username",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RoleType"
            },
            "name": "role",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/authorizations/datasets/{dataset_id}/group_role/{group_id}": {
      "delete": {
        "tags": [
          "authorization"
        ],
        "summary": "Remove Dataset Group Role",
        "description": "Remove any role the group has with a specific dataset.",
        "operationId": "remove_dataset_group_role_api_v2_authorizations_datasets__dataset_id__group_role__group_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Group Id",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "name": "group_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/authorizations/datasets/{dataset_id}/user_role/{username}": {
      "delete": {
        "tags": [
          "authorization"
        ],
        "summary": "Remove Dataset User Role",
        "description": "Remove any role the user has with a specific dataset.",
        "operationId": "remove_dataset_user_role_api_v2_authorizations_datasets__dataset_id__user_role__username__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            },
            "name": "username",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/authorizations/datasets/{dataset_id}/roles": {
      "get": {
        "tags": [
          "authorization"
        ],
        "summary": "Get Dataset Roles",
        "description": "Get a list of all users and groups that have assigned roles on this dataset.",
        "operationId": "get_dataset_roles_api_v2_authorizations_datasets__dataset_id__roles_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRoles"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/metadata/definition": {
      "get": {
        "tags": [
          "metadata"
        ],
        "summary": "Get Metadata Definition List",
        "operationId": "get_metadata_definition_list_api_v2_metadata_definition_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Name"
            },
            "name": "name",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 2
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "metadata"
        ],
        "summary": "Save Metadata Definition",
        "operationId": "save_metadata_definition_api_v2_metadata_definition_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataDefinitionIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataDefinitionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/metadata/definition/{metadata_definition_id}": {
      "get": {
        "tags": [
          "metadata"
        ],
        "summary": "Get Metadata Definition",
        "operationId": "get_metadata_definition_api_v2_metadata_definition__metadata_definition_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Metadata Definition Id"
            },
            "name": "metadata_definition_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataDefinitionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "put": {
        "tags": [
          "metadata"
        ],
        "summary": "Update Metadata Definition",
        "operationId": "update_metadata_definition_api_v2_metadata_definition__metadata_definition_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Metadata Definition Id"
            },
            "name": "metadata_definition_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataDefinitionIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataDefinitionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "tags": [
          "metadata"
        ],
        "summary": "Delete Metadata Definition",
        "description": "Delete metadata definition by specific ID.",
        "operationId": "delete_metadata_definition_api_v2_metadata_definition__metadata_definition_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Metadata Definition Id"
            },
            "name": "metadata_definition_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataDefinitionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/metadata/definition/search/{search_term}": {
      "get": {
        "tags": [
          "metadata"
        ],
        "summary": "Search Metadata Definition",
        "description": "Search all metadata definition in the db based on text.\n\nArguments:\n    text -- any text matching name or description\n    skip -- number of initial records to skip (i.e. for pagination)\n    limit -- restrict number of records to be returned (i.e. for pagination)",
        "operationId": "search_metadata_definition_api_v2_metadata_definition_search__search_term__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Search Term"
            },
            "name": "search_term",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/metadata/{metadata_id}": {
      "delete": {
        "tags": [
          "metadata"
        ],
        "summary": "Delete Metadata",
        "description": "Delete metadata by specific ID.",
        "operationId": "delete_metadata_api_v2_metadata__metadata_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Metadata Id"
            },
            "name": "metadata_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "tags": [
          "metadata"
        ],
        "summary": "Update Metadata",
        "description": "Update metadata. Any fields provided in the contents JSON will be added or updated in the metadata. If context or\nagent should be changed, use PUT.\n\nReturns:\n    Metadata document that was updated",
        "operationId": "update_metadata_api_v2_metadata__metadata_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Metadata Id"
            },
            "name": "metadata_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/public_metadata/definition": {
      "get": {
        "tags": [
          "public_metadata"
        ],
        "summary": "Get Metadata Definition List",
        "operationId": "get_metadata_definition_list_api_v2_public_metadata_definition_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Name"
            },
            "name": "name",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 2
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MetadataDefinitionOut"
                  },
                  "type": "array",
                  "title": "Response Get Metadata Definition List Api V2 Public Metadata Definition Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_metadata/definition/{metadata_definition_id}": {
      "get": {
        "tags": [
          "public_metadata"
        ],
        "summary": "Get Metadata Definition",
        "operationId": "get_metadata_definition_api_v2_public_metadata_definition__metadata_definition_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Metadata Definition Id"
            },
            "name": "metadata_definition_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataDefinitionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/public_metadata/definition/search/{search_term}": {
      "get": {
        "tags": [
          "public_metadata"
        ],
        "summary": "Search Metadata Definition",
        "description": "Search all metadata definition in the db based on text.\n\nArguments:\n    text -- any text matching name or description\n    skip -- number of initial records to skip (i.e. for pagination)\n    limit -- restrict number of records to be returned (i.e. for pagination)",
        "operationId": "search_metadata_definition_api_v2_public_metadata_definition_search__search_term__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Search Term"
            },
            "name": "search_term",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MetadataDefinitionOut"
                  },
                  "type": "array",
                  "title": "Response Search Metadata Definition Api V2 Public Metadata Definition Search  Search Term  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/files/{file_id}": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Download File",
        "operationId": "download_file_api_v2_files__file_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Version"
            },
            "name": "version",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Increment",
              "default": true
            },
            "name": "increment",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "put": {
        "tags": [
          "files"
        ],
        "summary": "Update File",
        "operationId": "update_file_api_v2_files__file_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_file_api_v2_files__file_id__put"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          },
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "files"
        ],
        "summary": "Delete File",
        "operationId": "delete_file_api_v2_files__file_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/files/{file_id}/url/": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Download File Url",
        "operationId": "download_file_url_api_v2_files__file_id__url__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Version"
            },
            "name": "version",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Expires In Seconds",
              "default": 3600
            },
            "name": "expires_in_seconds",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Increment",
              "default": true
            },
            "name": "increment",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/files/{file_id}/summary": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Get File Summary",
        "operationId": "get_file_summary_api_v2_files__file_id__summary_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/files/{file_id}/version_details": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Get File Version Details",
        "operationId": "get_file_version_details_api_v2_files__file_id__version_details_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Version Num",
              "default": 0
            },
            "name": "version_num",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/files/{file_id}/versions": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Get File Versions",
        "operationId": "get_file_versions_api_v2_files__file_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 20
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileVersion"
                  },
                  "type": "array",
                  "title": "Response Get File Versions Api V2 Files  File Id  Versions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/files/{file_id}/extract": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Post File Extract",
        "operationId": "post_file_extract_api_v2_files__file_id__extract_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Extractorname"
            },
            "name": "extractorName",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Parameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v2/files/{file_id}/resubmit_extract": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Resubmit File Extractions",
        "description": "This route will check metadata. We get the extractors run from metadata from extractors.\nThen they are resubmitted. At present parameters are not stored. This will change once Jobs are\nimplemented.\n\n    Arguments:\n    file_id: Id of file\n    credentials: credentials of logged in user\n    rabbitmq_client: Rabbitmq Client",
        "operationId": "resubmit_file_extractions_api_v2_files__file_id__resubmit_extract_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v2/files/{file_id}/thumbnail": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Download File Thumbnail",
        "operationId": "download_file_thumbnail_api_v2_files__file_id__thumbnail_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/files/{file_id}/thumbnail/{thumbnail_id}": {
      "patch": {
        "tags": [
          "files"
        ],
        "summary": "Add File Thumbnail",
        "operationId": "add_file_thumbnail_api_v2_files__file_id__thumbnail__thumbnail_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Thumbnail Id"
            },
            "name": "thumbnail_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/public_files/{file_id}/summary": {
      "get": {
        "tags": [
          "public_files"
        ],
        "summary": "Get File Summary",
        "operationId": "get_file_summary_api_v2_public_files__file_id__summary_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_files/{file_id}/version_details": {
      "get": {
        "tags": [
          "public_files"
        ],
        "summary": "Get File Version Details",
        "operationId": "get_file_version_details_api_v2_public_files__file_id__version_details_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Version Num",
              "default": 0
            },
            "name": "version_num",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_files/{file_id}/versions": {
      "get": {
        "tags": [
          "public_files"
        ],
        "summary": "Get File Versions",
        "operationId": "get_file_versions_api_v2_public_files__file_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 20
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileVersion"
                  },
                  "type": "array",
                  "title": "Response Get File Versions Api V2 Public Files  File Id  Versions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_files/{file_id}": {
      "get": {
        "tags": [
          "public_files"
        ],
        "summary": "Download File",
        "operationId": "download_file_api_v2_public_files__file_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Version"
            },
            "name": "version",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Increment",
              "default": true
            },
            "name": "increment",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_files/{file_id}/thumbnail": {
      "get": {
        "tags": [
          "public_files"
        ],
        "summary": "Download File Thumbnail",
        "operationId": "download_file_thumbnail_api_v2_public_files__file_id__thumbnail_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_files/{file_id}/metadata": {
      "get": {
        "tags": [
          "public_files"
        ],
        "summary": "Get File Metadata",
        "description": "Get file metadata.",
        "operationId": "get_file_metadata_api_v2_public_files__file_id__metadata_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Version"
            },
            "name": "version",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "All Versions",
              "default": false
            },
            "name": "all_versions",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_file_metadata_api_v2_public_files__file_id__metadata_get"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MetadataOut"
                  },
                  "type": "array",
                  "title": "Response Get File Metadata Api V2 Public Files  File Id  Metadata Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/files/{file_id}/metadata": {
      "get": {
        "tags": [
          "metadata"
        ],
        "summary": "Get File Metadata",
        "description": "Get file metadata.",
        "operationId": "get_file_metadata_api_v2_files__file_id__metadata_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Version"
            },
            "name": "version",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "All Versions",
              "default": false
            },
            "name": "all_versions",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_file_metadata_api_v2_files__file_id__metadata_get"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MetadataOut"
                  },
                  "type": "array",
                  "title": "Response Get File Metadata Api V2 Files  File Id  Metadata Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "put": {
        "tags": [
          "metadata"
        ],
        "summary": "Replace File Metadata",
        "description": "Replace metadata, including agent and context. If only metadata contents should be updated, use PATCH instead.\n\nReturns:\n    Metadata document that was updated",
        "operationId": "replace_file_metadata_api_v2_files__file_id__metadata_put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "metadata"
        ],
        "summary": "Add File Metadata",
        "description": "Attach new metadata to a file. The body must include a contents field with the JSON metadata, and either a\ncontext JSON-LD object, context_url, or definition (name of a metadata definition) to be valid.\n\nReturns:\n    Metadata document that was added to database",
        "operationId": "add_file_metadata_api_v2_files__file_id__metadata_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "tags": [
          "metadata"
        ],
        "summary": "Delete File Metadata",
        "operationId": "delete_file_metadata_api_v2_files__file_id__metadata_delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "tags": [
          "metadata"
        ],
        "summary": "Update File Metadata",
        "description": "Update metadata. Any fields provided in the contents JSON will be added or updated in the metadata. If context or\nagent should be changed, use PUT.\n\nReturns:\n    Metadata document that was updated",
        "operationId": "update_file_metadata_api_v2_files__file_id__metadata_patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Datasets",
        "operationId": "get_datasets_api_v2_datasets_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Mine",
              "default": false
            },
            "name": "mine",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Save Dataset",
        "operationId": "save_dataset_api_v2_datasets_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "License Id"
            },
            "name": "license_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/{dataset_id}": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset",
        "operationId": "get_dataset_api_v2_datasets__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "put": {
        "tags": [
          "datasets"
        ],
        "summary": "Edit Dataset",
        "operationId": "edit_dataset_api_v2_datasets__dataset_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Delete Dataset",
        "operationId": "delete_dataset_api_v2_datasets__dataset_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "tags": [
          "datasets"
        ],
        "summary": "Patch Dataset",
        "operationId": "patch_dataset_api_v2_datasets__dataset_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/{dataset_id}/files": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset Files",
        "operationId": "get_dataset_files_api_v2_datasets__dataset_id__files_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Folder Id"
            },
            "name": "folder_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Save File",
        "operationId": "save_file_api_v2_datasets__dataset_id__files_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Folder Id"
            },
            "name": "folder_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_save_file_api_v2_datasets__dataset_id__files_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/{dataset_id}/freeze": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Freeze Datasets",
        "operationId": "get_freeze_datasets_api_v2_datasets__dataset_id__freeze_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Freeze Dataset",
        "operationId": "freeze_dataset_api_v2_datasets__dataset_id__freeze_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetFreezeOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/{dataset_id}/freeze/latest_version_num": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Freeze Dataset Lastest Version Num",
        "operationId": "get_freeze_dataset_lastest_version_num_api_v2_datasets__dataset_id__freeze_latest_version_num_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Get Freeze Dataset Lastest Version Num Api V2 Datasets  Dataset Id  Freeze Latest Version Num Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/{dataset_id}/freeze/{frozen_version_num}": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Freeze Dataset Version",
        "operationId": "get_freeze_dataset_version_api_v2_datasets__dataset_id__freeze__frozen_version_num__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Frozen Version Num"
            },
            "name": "frozen_version_num",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetFreezeOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Delete Freeze Dataset Version",
        "operationId": "delete_freeze_dataset_version_api_v2_datasets__dataset_id__freeze__frozen_version_num__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Frozen Version Num"
            },
            "name": "frozen_version_num",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetFreezeOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/{dataset_id}/folders": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset Folders",
        "operationId": "get_dataset_folders_api_v2_datasets__dataset_id__folders_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Parent Folder"
            },
            "name": "parent_folder",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Add Folder",
        "operationId": "add_folder_api_v2_datasets__dataset_id__folders_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/{dataset_id}/folders_and_files": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset Folders And Files",
        "operationId": "get_dataset_folders_and_files_api_v2_datasets__dataset_id__folders_and_files_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Folder Id"
            },
            "name": "folder_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/{dataset_id}/folders/{folder_id}": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Folder",
        "operationId": "get_folder_api_v2_datasets__dataset_id__folders__folder_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Folder Id"
            },
            "name": "folder_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Delete Folder",
        "operationId": "delete_folder_api_v2_datasets__dataset_id__folders__folder_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Folder Id"
            },
            "name": "folder_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "tags": [
          "datasets"
        ],
        "summary": "Patch Folder",
        "operationId": "patch_folder_api_v2_datasets__dataset_id__folders__folder_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Folder Id"
            },
            "name": "folder_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/{dataset_id}/filesMultiple": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Save Files",
        "operationId": "save_files_api_v2_datasets__dataset_id__filesMultiple_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Folder Id"
            },
            "name": "folder_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_save_files_api_v2_datasets__dataset_id__filesMultiple_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileOut"
                  },
                  "type": "array",
                  "title": "Response Save Files Api V2 Datasets  Dataset Id  Filesmultiple Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/{dataset_id}/local_files": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Save Local File",
        "operationId": "save_local_file_api_v2_datasets__dataset_id__local_files_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Folder Id"
            },
            "name": "folder_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalFileIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/createFromZip": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Create Dataset From Zip",
        "operationId": "create_dataset_from_zip_api_v2_datasets_createFromZip_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_dataset_from_zip_api_v2_datasets_createFromZip_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/{dataset_id}/download": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download Dataset",
        "operationId": "download_dataset_api_v2_datasets__dataset_id__download_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/{dataset_id}/extract": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset Extract",
        "operationId": "get_dataset_extract_api_v2_datasets__dataset_id__extract_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Extractorname"
            },
            "name": "extractorName",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Parameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/{dataset_id}/thumbnail": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download Dataset Thumbnail",
        "operationId": "download_dataset_thumbnail_api_v2_datasets__dataset_id__thumbnail_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/datasets/{dataset_id}/thumbnail/{thumbnail_id}": {
      "patch": {
        "tags": [
          "datasets"
        ],
        "summary": "Add Dataset Thumbnail",
        "operationId": "add_dataset_thumbnail_api_v2_datasets__dataset_id__thumbnail__thumbnail_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Thumbnail Id"
            },
            "name": "thumbnail_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/public_datasets": {
      "get": {
        "tags": [
          "public_datasets"
        ],
        "summary": "Get Datasets",
        "operationId": "get_datasets_api_v2_public_datasets_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_datasets/{dataset_id}": {
      "get": {
        "tags": [
          "public_datasets"
        ],
        "summary": "Get Dataset",
        "operationId": "get_dataset_api_v2_public_datasets__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_datasets/{dataset_id}/files": {
      "get": {
        "tags": [
          "public_datasets"
        ],
        "summary": "Get Dataset Files",
        "operationId": "get_dataset_files_api_v2_public_datasets__dataset_id__files_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Folder Id"
            },
            "name": "folder_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileOut"
                  },
                  "type": "array",
                  "title": "Response Get Dataset Files Api V2 Public Datasets  Dataset Id  Files Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_datasets/{dataset_id}/folders": {
      "get": {
        "tags": [
          "public_datasets"
        ],
        "summary": "Get Dataset Folders",
        "operationId": "get_dataset_folders_api_v2_public_datasets__dataset_id__folders_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Parent Folder"
            },
            "name": "parent_folder",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FolderOut"
                  },
                  "type": "array",
                  "title": "Response Get Dataset Folders Api V2 Public Datasets  Dataset Id  Folders Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_datasets/{dataset_id}/folders_and_files": {
      "get": {
        "tags": [
          "public_datasets"
        ],
        "summary": "Get Dataset Folders And Files",
        "operationId": "get_dataset_folders_and_files_api_v2_public_datasets__dataset_id__folders_and_files_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Folder Id"
            },
            "name": "folder_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_datasets/{dataset_id}/metadata": {
      "get": {
        "tags": [
          "public_datasets"
        ],
        "summary": "Get Dataset Metadata",
        "operationId": "get_dataset_metadata_api_v2_public_datasets__dataset_id__metadata_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_dataset_metadata_api_v2_public_datasets__dataset_id__metadata_get"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MetadataOut"
                  },
                  "type": "array",
                  "title": "Response Get Dataset Metadata Api V2 Public Datasets  Dataset Id  Metadata Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_datasets/{dataset_id}/download": {
      "get": {
        "tags": [
          "public_datasets"
        ],
        "summary": "Download Dataset",
        "operationId": "download_dataset_api_v2_public_datasets__dataset_id__download_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_datasets/{dataset_id}/freeze": {
      "get": {
        "tags": [
          "public_datasets"
        ],
        "summary": "Get Freeze Datasets",
        "operationId": "get_freeze_datasets_api_v2_public_datasets__dataset_id__freeze_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/datasets/{dataset_id}/metadata": {
      "get": {
        "tags": [
          "metadata"
        ],
        "summary": "Get Dataset Metadata",
        "operationId": "get_dataset_metadata_api_v2_datasets__dataset_id__metadata_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_dataset_metadata_api_v2_datasets__dataset_id__metadata_get"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MetadataOut"
                  },
                  "type": "array",
                  "title": "Response Get Dataset Metadata Api V2 Datasets  Dataset Id  Metadata Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "put": {
        "tags": [
          "metadata"
        ],
        "summary": "Replace Dataset Metadata",
        "description": "Update metadata. Any fields provided in the contents JSON will be added or updated in the metadata. If context or\nagent should be changed, use PUT.\n\nReturns:\n    Metadata document that was updated",
        "operationId": "replace_dataset_metadata_api_v2_datasets__dataset_id__metadata_put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "metadata"
        ],
        "summary": "Add Dataset Metadata",
        "description": "Attach new metadata to a dataset. The body must include a contents field with the JSON metadata, and either a\ncontext JSON-LD object, context_url, or definition (name of a metadata definition) to be valid.\n\nReturns:\n    Metadata document that was added to database",
        "operationId": "add_dataset_metadata_api_v2_datasets__dataset_id__metadata_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "tags": [
          "metadata"
        ],
        "summary": "Delete Dataset Metadata",
        "operationId": "delete_dataset_metadata_api_v2_datasets__dataset_id__metadata_delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "tags": [
          "metadata"
        ],
        "summary": "Update Dataset Metadata",
        "description": "Update metadata. Any fields provided in the contents JSON will be added or updated in the metadata. If context or\nagent should be changed, use PUT.\n\nReturns:\n    Metadata document that was updated",
        "operationId": "update_dataset_metadata_api_v2_datasets__dataset_id__metadata_patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/folders/{folder_id}/path": {
      "get": {
        "tags": [
          "folders"
        ],
        "summary": "Download Folder",
        "operationId": "download_folder_api_v2_folders__folder_id__path_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Folder Id"
            },
            "name": "folder_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/public_folders/{folder_id}/path": {
      "get": {
        "tags": [
          "public_folders"
        ],
        "summary": "Download Folder",
        "operationId": "download_folder_api_v2_public_folders__folder_id__path_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Folder Id"
            },
            "name": "folder_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/listeners/instance": {
      "get": {
        "tags": [
          "listeners"
        ],
        "summary": "Get Instance Id",
        "operationId": "get_instance_id_api_v2_listeners_instance_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/listeners": {
      "get": {
        "tags": [
          "listeners"
        ],
        "summary": "Get Listeners",
        "description": "Get a list of all Event Listeners in the db.\n\nArguments:\n    skip -- number of initial records to skip (i.e. for pagination)\n    limit -- restrict number of records to be returned (i.e. for pagination)\n    heartbeat_interval -- number of seconds after which a listener is considered dead\n    category -- filter by category has to be exact match\n    label -- filter by label has to be exact match\n    alive_only -- filter by alive status\n    all -- boolean stating if we want to show all listeners irrespective of admin and admin_mode",
        "operationId": "get_listeners_api_v2_listeners_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 2
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Heartbeat Interval",
              "default": 300
            },
            "name": "heartbeat_interval",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Category"
            },
            "name": "category",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Alive Only",
              "default": false
            },
            "name": "alive_only",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Process"
            },
            "name": "process",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "All",
              "default": false
            },
            "name": "all",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "listeners"
        ],
        "summary": "Save Listener",
        "description": "Register a new Event Listener with the system.",
        "operationId": "save_listener_api_v2_listeners_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventListenerIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventListenerOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/listeners/search": {
      "get": {
        "tags": [
          "listeners"
        ],
        "summary": "Search Listeners",
        "description": "Search all Event Listeners in the db based on text.\n\nArguments:\n    text -- any text matching name or description\n    skip -- number of initial records to skip (i.e. for pagination)\n    limit -- restrict number of records to be returned (i.e. for pagination)",
        "operationId": "search_listeners_api_v2_listeners_search_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Text",
              "default": ""
            },
            "name": "text",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 2
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Heartbeat Interval",
              "default": 300
            },
            "name": "heartbeat_interval",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Process"
            },
            "name": "process",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/listeners/categories": {
      "get": {
        "tags": [
          "listeners"
        ],
        "summary": "List Categories",
        "description": "Get all the distinct categories of registered listeners in the db",
        "operationId": "list_categories_api_v2_listeners_categories_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response List Categories Api V2 Listeners Categories Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/listeners/defaultLabels": {
      "get": {
        "tags": [
          "listeners"
        ],
        "summary": "List Default Labels",
        "description": "Get all the distinct default labels of registered listeners in the db",
        "operationId": "list_default_labels_api_v2_listeners_defaultLabels_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response List Default Labels Api V2 Listeners Defaultlabels Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/listeners/{listener_id}": {
      "get": {
        "tags": [
          "listeners"
        ],
        "summary": "Get Listener",
        "description": "Return JSON information about an Event Listener if it exists.",
        "operationId": "get_listener_api_v2_listeners__listener_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Listener Id"
            },
            "name": "listener_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventListenerOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "put": {
        "tags": [
          "listeners"
        ],
        "summary": "Edit Listener",
        "description": "Update the information about an existing Event Listener..\n\nArguments:\n    listener_id -- UUID of the listener to be udpated\n    listener_in -- JSON object including updated information",
        "operationId": "edit_listener_api_v2_listeners__listener_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Listener Id"
            },
            "name": "listener_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventListenerIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventListenerOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "tags": [
          "listeners"
        ],
        "summary": "Delete Listener",
        "description": "Remove an Event Listener from the database. Will not clear event history for the listener.",
        "operationId": "delete_listener_api_v2_listeners__listener_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Listener Id"
            },
            "name": "listener_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/listeners/{listener_id}/status": {
      "get": {
        "tags": [
          "listeners"
        ],
        "summary": "Check Listener Livelihood",
        "description": "Return JSON information about an Event Listener if it exists.",
        "operationId": "check_listener_livelihood_api_v2_listeners__listener_id__status_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Listener Id"
            },
            "name": "listener_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Heartbeat Interval",
              "default": 300
            },
            "name": "heartbeat_interval",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Check Listener Livelihood Api V2 Listeners  Listener Id  Status Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/listeners/{listener_id}/enable": {
      "put": {
        "tags": [
          "listeners"
        ],
        "summary": "Enable Listener",
        "description": "Enable an Event Listener. Only admins can enable listeners.\n\nArguments:\n    listener_id -- UUID of the listener to be enabled",
        "operationId": "enable_listener_api_v2_listeners__listener_id__enable_put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Listener Id"
            },
            "name": "listener_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventListenerOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/listeners/{listener_id}/disable": {
      "put": {
        "tags": [
          "listeners"
        ],
        "summary": "Disable Listener",
        "description": "Disable an Event Listener. Only admins can enable listeners.\n\nArguments:\n    listener_id -- UUID of the listener to be enabled",
        "operationId": "disable_listener_api_v2_listeners__listener_id__disable_put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Listener Id"
            },
            "name": "listener_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventListenerOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/extractors": {
      "post": {
        "tags": [
          "extractors"
        ],
        "summary": "Save Legacy Listener",
        "description": "This will take a POST with Clowder v1 extractor_info included, and convert/update to a v2 Listener.",
        "operationId": "save_legacy_listener_api_v2_extractors_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyEventListenerIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventListenerOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/jobs": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Get All Job Summary",
        "description": "Get a list of all jobs from the db.\nArguments:\n    listener_id -- listener id\n    status -- filter by status\n    user_id -- filter by user id\n    file_id -- filter by file id\n    dataset_id -- filter by dataset id\n    created: Optional[datetime] = None,\n    skip -- number of initial records to skip (i.e. for pagination)\n    limit -- restrict number of records to be returned (i.e. for pagination)",
        "operationId": "get_all_job_summary_api_v2_jobs_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Listener Id"
            },
            "name": "listener_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Status"
            },
            "name": "status",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "User Id"
            },
            "name": "user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Created"
            },
            "name": "created",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 2
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/jobs/{job_id}/summary": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Get Job Summary",
        "operationId": "get_job_summary_api_v2_jobs__job_id__summary_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            },
            "name": "job_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventListenerJobOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/jobs/{job_id}/updates": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Get Job Updates",
        "operationId": "get_job_updates_api_v2_jobs__job_id__updates_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            },
            "name": "job_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EventListenerJobUpdateOut"
                  },
                  "type": "array",
                  "title": "Response Get Job Updates Api V2 Jobs  Job Id  Updates Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/elasticsearch/search": {
      "put": {
        "tags": [
          "elasticsearch"
        ],
        "summary": "Search",
        "operationId": "search_api_v2_elasticsearch_search_put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Index Name"
            },
            "name": "index_name",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            },
            "name": "query",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Search Api V2 Elasticsearch Search Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/elasticsearch/all/_msearch": {
      "post": {
        "tags": [
          "elasticsearch"
        ],
        "summary": "Msearch",
        "operationId": "msearch_api_v2_elasticsearch_all__msearch_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/public_elasticsearch/search": {
      "put": {
        "tags": [
          "public_elasticsearch"
        ],
        "summary": "Search",
        "operationId": "search_api_v2_public_elasticsearch_search_put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Index Name"
            },
            "name": "index_name",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            },
            "name": "query",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Search Api V2 Public Elasticsearch Search Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_elasticsearch/all/_msearch": {
      "post": {
        "tags": [
          "public_elasticsearch"
        ],
        "summary": "Msearch",
        "operationId": "msearch_api_v2_public_elasticsearch_all__msearch_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/feeds": {
      "get": {
        "tags": [
          "feeds"
        ],
        "summary": "Get Feeds",
        "description": "Fetch all existing Feeds.",
        "operationId": "get_feeds_api_v2_feeds_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Searchterm"
            },
            "name": "searchTerm",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "feeds"
        ],
        "summary": "Save Feed",
        "description": "Create a new Feed (i.e. saved search) in the database.",
        "operationId": "save_feed_api_v2_feeds_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/feeds/{feed_id}": {
      "get": {
        "tags": [
          "feeds"
        ],
        "summary": "Get Feed",
        "description": "Fetch an existing saved search Feed.",
        "operationId": "get_feed_api_v2_feeds__feed_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed Id"
            },
            "name": "feed_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "put": {
        "tags": [
          "feeds"
        ],
        "summary": "Edit Feed",
        "description": "Update the information about an existing Feed..\n\nArguments:\n    feed_id -- UUID of the feed to be udpated\n    feed_in -- JSON object including updated information",
        "operationId": "edit_feed_api_v2_feeds__feed_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed Id"
            },
            "name": "feed_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "tags": [
          "feeds"
        ],
        "summary": "Delete Feed",
        "description": "Delete an existing saved search Feed.",
        "operationId": "delete_feed_api_v2_feeds__feed_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed Id"
            },
            "name": "feed_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/feeds/{feed_id}/listeners": {
      "post": {
        "tags": [
          "feeds"
        ],
        "summary": "Associate Listener",
        "description": "Associate an existing Event Listener with a Feed, e.g. so it will be triggered on new Feed results.\n\nArguments:\n    feed_id: Feed that should have new Event Listener associated\n    listener: JSON object with \"listener_id\" field and \"automatic\" bool field (whether to auto-trigger on new data)",
        "operationId": "associate_listener_api_v2_feeds__feed_id__listeners_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed Id"
            },
            "name": "feed_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedListener"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/feeds/{feed_id}/listeners/{listener_id}": {
      "delete": {
        "tags": [
          "feeds"
        ],
        "summary": "Disassociate Listener",
        "description": "Disassociate an Event Listener from a Feed.\n\nArguments:\n    feed_id: UUID of search Feed that is being changed\n    listener_id: UUID of Event Listener that should be disassociated",
        "operationId": "disassociate_listener_api_v2_feeds__feed_id__listeners__listener_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed Id"
            },
            "name": "feed_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Listener Id"
            },
            "name": "listener_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/groups": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get Groups",
        "description": "Get a list of all Groups in the db the user is a member/owner of.\n\nArguments:\n    skip -- number of initial recoto_list()rds to skip (i.e. for pagination)\n    limit -- restrict number of records to be returned (i.e. for pagination)",
        "operationId": "get_groups_api_v2_groups_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Save Group",
        "operationId": "save_group_api_v2_groups_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/groups/search/{search_term}": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Search Group",
        "description": "Search all groups in the db based on text.\n\nArguments:\n    text -- any text matching name or description\n    skip -- number of initial records to skip (i.e. for pagination)\n    limit -- restrict number of records to be returned (i.e. for pagination)",
        "operationId": "search_group_api_v2_groups_search__search_term__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Search Term"
            },
            "name": "search_term",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/groups/{group_id}": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get Group",
        "operationId": "get_group_api_v2_groups__group_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Group Id"
            },
            "name": "group_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "put": {
        "tags": [
          "groups"
        ],
        "summary": "Edit Group",
        "operationId": "edit_group_api_v2_groups__group_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Group Id"
            },
            "name": "group_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "tags": [
          "groups"
        ],
        "summary": "Delete Group",
        "operationId": "delete_group_api_v2_groups__group_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Group Id"
            },
            "name": "group_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/groups/{group_id}/add/{username}": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Add Member",
        "description": "Add a new user to a group.",
        "operationId": "add_member_api_v2_groups__group_id__add__username__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Group Id"
            },
            "name": "group_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            },
            "name": "username",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Role"
            },
            "name": "role",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/groups/{group_id}/remove/{username}": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Remove Member",
        "description": "Remove a user from a group.",
        "operationId": "remove_member_api_v2_groups__group_id__remove__username__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Group Id"
            },
            "name": "group_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            },
            "name": "username",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/groups/{group_id}/update/{username}": {
      "put": {
        "tags": [
          "groups"
        ],
        "summary": "Update Member",
        "description": "Update user role.",
        "operationId": "update_member_api_v2_groups__group_id__update__username__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Group Id"
            },
            "name": "group_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            },
            "name": "username",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Role"
            },
            "name": "role",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/visualizations": {
      "post": {
        "tags": [
          "visualizations"
        ],
        "summary": "Add Visualization",
        "description": "Insert VisualizationsDataDB object into MongoDB (makes Clowder ID), then Minio.\n\nArguments:\n    name: name of visualization data\n    description: description of visualization data\n    file: bytes to upload",
        "operationId": "add_Visualization_api_v2_visualizations_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            },
            "name": "name",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Description"
            },
            "name": "description",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Config"
            },
            "name": "config",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_Visualization_api_v2_visualizations_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisualizationDataOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/visualizations/{visualization_id}": {
      "get": {
        "tags": [
          "visualizations"
        ],
        "summary": "Get Visualization",
        "operationId": "get_visualization_api_v2_visualizations__visualization_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Visualization Id"
            },
            "name": "visualization_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisualizationDataOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "tags": [
          "visualizations"
        ],
        "summary": "Remove Visualization",
        "operationId": "remove_visualization_api_v2_visualizations__visualization_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Visualization Id"
            },
            "name": "visualization_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/visualizations/{visualization_id}/bytes": {
      "get": {
        "tags": [
          "visualizations"
        ],
        "summary": "Download Visualization",
        "operationId": "download_visualization_api_v2_visualizations__visualization_id__bytes_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Visualization Id"
            },
            "name": "visualization_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/visualizations/{visualization_id}/url/": {
      "get": {
        "tags": [
          "visualizations"
        ],
        "summary": "Download Visualization Url",
        "operationId": "download_visualization_url_api_v2_visualizations__visualization_id__url__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Visualization Id"
            },
            "name": "visualization_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Expires In Seconds",
              "default": 3600
            },
            "name": "expires_in_seconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/visualizations/config": {
      "post": {
        "tags": [
          "visualizations"
        ],
        "summary": "Save Visualization Config",
        "operationId": "save_visualization_config_api_v2_visualizations_config_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisualizationConfigIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisualizationConfigOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/visualizations/{resource_id}/config": {
      "get": {
        "tags": [
          "visualizations"
        ],
        "summary": "Get Resource Visconfig",
        "operationId": "get_resource_visconfig_api_v2_visualizations__resource_id__config_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Resource Id",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "name": "resource_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/VisualizationConfigOut"
                  },
                  "type": "array",
                  "title": "Response Get Resource Visconfig Api V2 Visualizations  Resource Id  Config Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/visualizations/config/{config_id}": {
      "get": {
        "tags": [
          "visualizations"
        ],
        "summary": "Get Visconfig",
        "operationId": "get_visconfig_api_v2_visualizations_config__config_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Config Id",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "name": "config_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisualizationConfigOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "tags": [
          "visualizations"
        ],
        "summary": "Delete Visconfig",
        "operationId": "delete_visconfig_api_v2_visualizations_config__config_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Config Id",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "name": "config_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisualizationConfigOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/visualizations/config/{config_id}/visdata": {
      "get": {
        "tags": [
          "visualizations"
        ],
        "summary": "Get Visdata From Visconfig",
        "operationId": "get_visdata_from_visconfig_api_v2_visualizations_config__config_id__visdata_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Config Id",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "name": "config_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/VisualizationDataOut"
                  },
                  "type": "array",
                  "title": "Response Get Visdata From Visconfig Api V2 Visualizations Config  Config Id  Visdata Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/public_visualizations/{visualization_id}": {
      "get": {
        "tags": [
          "public_visualizations"
        ],
        "summary": "Get Visualization",
        "operationId": "get_visualization_api_v2_public_visualizations__visualization_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Visualization Id"
            },
            "name": "visualization_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisualizationDataOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_visualizations/{visualization_id}/bytes": {
      "get": {
        "tags": [
          "public_visualizations"
        ],
        "summary": "Download Visualization",
        "operationId": "download_visualization_api_v2_public_visualizations__visualization_id__bytes_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Visualization Id"
            },
            "name": "visualization_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_visualizations/{visualization_id}/url/": {
      "get": {
        "tags": [
          "public_visualizations"
        ],
        "summary": "Download Visualization Url",
        "operationId": "download_visualization_url_api_v2_public_visualizations__visualization_id__url__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Visualization Id"
            },
            "name": "visualization_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Expires In Seconds",
              "default": 3600
            },
            "name": "expires_in_seconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_visualizations/{resource_id}/config": {
      "get": {
        "tags": [
          "public_visualizations"
        ],
        "summary": "Get Resource Visconfig",
        "operationId": "get_resource_visconfig_api_v2_public_visualizations__resource_id__config_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Resource Id",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "name": "resource_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/VisualizationConfigOut"
                  },
                  "type": "array",
                  "title": "Response Get Resource Visconfig Api V2 Public Visualizations  Resource Id  Config Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_visualizations/config/{config_id}": {
      "get": {
        "tags": [
          "public_visualizations"
        ],
        "summary": "Get Visconfig",
        "operationId": "get_visconfig_api_v2_public_visualizations_config__config_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Config Id",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "name": "config_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisualizationConfigOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_visualizations/config/{config_id}/visdata": {
      "get": {
        "tags": [
          "public_visualizations"
        ],
        "summary": "Get Visdata From Visconfig",
        "operationId": "get_visdata_from_visconfig_api_v2_public_visualizations_config__config_id__visdata_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Config Id",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "name": "config_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/VisualizationDataOut"
                  },
                  "type": "array",
                  "title": "Response Get Visdata From Visconfig Api V2 Public Visualizations Config  Config Id  Visdata Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/thumbnails": {
      "post": {
        "tags": [
          "thumbnails"
        ],
        "summary": "Add Thumbnail",
        "description": "Insert Thumbnail object into MongoDB (makes Clowder ID), then Minio",
        "operationId": "add_thumbnail_api_v2_thumbnails_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_thumbnail_api_v2_thumbnails_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThumbnailOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/thumbnails/{thumbnail_id}": {
      "get": {
        "tags": [
          "thumbnails"
        ],
        "summary": "Download Thumbnail",
        "operationId": "download_thumbnail_api_v2_thumbnails__thumbnail_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Thumbnail Id"
            },
            "name": "thumbnail_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Increment",
              "default": false
            },
            "name": "increment",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "tags": [
          "thumbnails"
        ],
        "summary": "Remove Thumbnail",
        "operationId": "remove_thumbnail_api_v2_thumbnails__thumbnail_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Thumb Id"
            },
            "name": "thumb_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/public_thumbnails/{thumbnail_id}": {
      "get": {
        "tags": [
          "public_thumbnails"
        ],
        "summary": "Download Thumbnail",
        "operationId": "download_thumbnail_api_v2_public_thumbnails__thumbnail_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Thumbnail Id"
            },
            "name": "thumbnail_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Increment",
              "default": false
            },
            "name": "increment",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/licenses": {
      "post": {
        "tags": [
          "licenses"
        ],
        "summary": "Save License",
        "operationId": "save_license_api_v2_licenses_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/licenses/{license_id}": {
      "get": {
        "tags": [
          "licenses"
        ],
        "summary": "Get License",
        "operationId": "get_license_api_v2_licenses__license_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "License Id"
            },
            "name": "license_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "put": {
        "tags": [
          "licenses"
        ],
        "summary": "Edit License",
        "operationId": "edit_license_api_v2_licenses__license_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "License Id"
            },
            "name": "license_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "delete": {
        "tags": [
          "licenses"
        ],
        "summary": "Delete License",
        "operationId": "delete_license_api_v2_licenses__license_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "License Id"
            },
            "name": "license_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable Admin",
              "default": false
            },
            "name": "enable_admin",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/licenses/standard_licenses/all": {
      "get": {
        "tags": [
          "licenses"
        ],
        "summary": "Get Standard Licenses",
        "operationId": "get_standard_licenses_api_v2_licenses_standard_licenses_all_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LicenseOption"
                  },
                  "type": "array",
                  "title": "Response Get Standard Licenses Api V2 Licenses Standard Licenses All Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/licenses/standard_licenses/{license_id}": {
      "get": {
        "tags": [
          "licenses"
        ],
        "summary": "Get Standard License Url",
        "operationId": "get_standard_license_url_api_v2_licenses_standard_licenses__license_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "License Id"
            },
            "name": "license_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get Standard License Url Api V2 Licenses Standard Licenses  License Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/api/v2/public_licenses/{license_id}": {
      "get": {
        "tags": [
          "public_licenses"
        ],
        "summary": "Get License",
        "operationId": "get_license_api_v2_public_licenses__license_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "License Id"
            },
            "name": "license_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_licenses/standard_licenses/all": {
      "get": {
        "tags": [
          "public_licenses"
        ],
        "summary": "Get Standard Licenses",
        "operationId": "get_standard_licenses_api_v2_public_licenses_standard_licenses_all_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LicenseOption"
                  },
                  "type": "array",
                  "title": "Response Get Standard Licenses Api V2 Public Licenses Standard Licenses All Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/public_licenses/standard_licenses/{license_id}": {
      "get": {
        "tags": [
          "public_licenses"
        ],
        "summary": "Get Standard License Url",
        "operationId": "get_standard_license_url_api_v2_public_licenses_standard_licenses__license_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "License Id"
            },
            "name": "license_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get Standard License Url Api V2 Public Licenses Standard Licenses  License Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/status": {
      "get": {
        "tags": [
          "status"
        ],
        "summary": "Get Status",
        "operationId": "get_status_api_v2_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/register": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Register",
        "operationId": "register_api_v2_auth_register_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/login": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Loginget",
        "description": "Redirect to keycloak login page.",
        "operationId": "loginGet_api_v2_auth_login_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Loginpost",
        "description": "Client can use this to login when redirect is not available.",
        "operationId": "loginPost_api_v2_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/logout": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "description": "Logout of keycloak.",
        "operationId": "logout_api_v2_auth_logout_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v2/auth": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Auth",
        "description": "Redirect endpoint Keycloak redirects to after login.",
        "operationId": "auth_api_v2_auth_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            },
            "name": "code",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/refresh_token": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh Token",
        "operationId": "refresh_token_api_v2_auth_refresh_token_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v2/auth/broker/{identity_provider}/token": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Idenity Provider Token",
        "description": "Get identity provider JWT token from keyclok. Keycloak must be configured to store external tokens.",
        "operationId": "get_idenity_provider_token_api_v2_auth_broker__identity_provider__token_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Identity Provider"
            },
            "name": "identity_provider",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          }
        ]
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorizationBase": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "user_ids": {
            "items": {
              "type": "string",
              "format": "email"
            },
            "type": "array",
            "title": "User Ids",
            "default": []
          },
          "role": {
            "$ref": "#/components/schemas/RoleType"
          },
          "group_ids": {
            "items": {
              "type": "string",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "title": "Group Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "role"
        ],
        "title": "AuthorizationBase",
        "description": "Currently, user_ids list is used for primary authorization checks.\ngroup_ids are kept for convenience (adding/removing users in batch) but user_ids list MUST be kept current."
      },
      "AuthorizationMetadata": {
        "properties": {
          "metadata_id": {
            "type": "string",
            "title": "Metadata Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "user_id": {
            "type": "string",
            "format": "email",
            "title": "User Id"
          },
          "role": {
            "$ref": "#/components/schemas/RoleType"
          }
        },
        "type": "object",
        "required": [
          "metadata_id",
          "user_id",
          "role"
        ],
        "title": "AuthorizationMetadata"
      },
      "AuthorizationOut": {
        "properties": {
          "creator": {
            "type": "string",
            "format": "email",
            "title": "Creator"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "user_ids": {
            "items": {
              "type": "string",
              "format": "email"
            },
            "type": "array",
            "title": "User Ids",
            "default": []
          },
          "role": {
            "$ref": "#/components/schemas/RoleType"
          },
          "group_ids": {
            "items": {
              "type": "string",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "title": "Group Ids",
            "default": []
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          }
        },
        "type": "object",
        "required": [
          "creator",
          "dataset_id",
          "role"
        ],
        "title": "AuthorizationOut",
        "description": "The creator of the Authorization object should also be the creator of the dataset itself."
      },
      "Body_add_Visualization_api_v2_visualizations_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_add_Visualization_api_v2_visualizations_post"
      },
      "Body_add_thumbnail_api_v2_thumbnails_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_add_thumbnail_api_v2_thumbnails_post"
      },
      "Body_create_dataset_from_zip_api_v2_datasets_createFromZip_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_create_dataset_from_zip_api_v2_datasets_createFromZip_post"
      },
      "Body_get_dataset_metadata_api_v2_datasets__dataset_id__metadata_get": {
        "properties": {
          "listener_name": {
            "type": "string",
            "title": "Listener Name"
          },
          "listener_version": {
            "type": "number",
            "title": "Listener Version"
          }
        },
        "type": "object",
        "title": "Body_get_dataset_metadata_api_v2_datasets__dataset_id__metadata_get"
      },
      "Body_get_dataset_metadata_api_v2_public_datasets__dataset_id__metadata_get": {
        "properties": {
          "listener_name": {
            "type": "string",
            "title": "Listener Name"
          },
          "listener_version": {
            "type": "number",
            "title": "Listener Version"
          }
        },
        "type": "object",
        "title": "Body_get_dataset_metadata_api_v2_public_datasets__dataset_id__metadata_get"
      },
      "Body_get_file_metadata_api_v2_files__file_id__metadata_get": {
        "properties": {
          "definition": {
            "type": "string",
            "title": "Definition"
          },
          "listener_name": {
            "type": "string",
            "title": "Listener Name"
          },
          "listener_version": {
            "type": "number",
            "title": "Listener Version"
          }
        },
        "type": "object",
        "title": "Body_get_file_metadata_api_v2_files__file_id__metadata_get"
      },
      "Body_get_file_metadata_api_v2_public_files__file_id__metadata_get": {
        "properties": {
          "definition": {
            "type": "string",
            "title": "Definition"
          },
          "listener_name": {
            "type": "string",
            "title": "Listener Name"
          },
          "listener_version": {
            "type": "number",
            "title": "Listener Version"
          }
        },
        "type": "object",
        "title": "Body_get_file_metadata_api_v2_public_files__file_id__metadata_get"
      },
      "Body_save_file_api_v2_datasets__dataset_id__files_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_save_file_api_v2_datasets__dataset_id__files_post"
      },
      "Body_save_files_api_v2_datasets__dataset_id__filesMultiple_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_save_files_api_v2_datasets__dataset_id__filesMultiple_post"
      },
      "Body_update_file_api_v2_files__file_id__put": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_update_file_api_v2_files__file_id__put"
      },
      "ContentType": {
        "properties": {
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "default": "N/A"
          },
          "main_type": {
            "type": "string",
            "title": "Main Type",
            "default": "N/A"
          }
        },
        "type": "object",
        "title": "ContentType",
        "description": "This model describes the content type of any type of file(File or Visualization data) uploaded to Clowder. A typical example is \"text/plain\" for .txt.\nIn Clowder v1 extractors, \"text/*\" syntax is acceptable for wildcard matches. To support this, the content type is\nsplit into main (\"text\") and secondary (\"plain\") parts so the dynamic matching with * can still be done."
      },
      "DatasetBase": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "default": "N/A"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "PRIVATE"
          }
        },
        "type": "object",
        "title": "DatasetBase"
      },
      "DatasetFreezeOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "default": "N/A"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "PRIVATE"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOut"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "user_views": {
            "type": "integer",
            "title": "User Views",
            "default": 0
          },
          "downloads": {
            "type": "integer",
            "title": "Downloads",
            "default": 0
          },
          "thumbnail_id": {
            "type": "string",
            "title": "Thumbnail Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "origin_id": {
            "type": "string",
            "title": "Origin Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "standard_license": {
            "type": "boolean",
            "title": "Standard License",
            "default": true
          },
          "license_id": {
            "type": "string",
            "title": "License Id"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "frozen": {
            "type": "boolean",
            "title": "Frozen",
            "default": true
          },
          "frozen_version_num": {
            "type": "integer",
            "title": "Frozen Version Num"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "creator",
          "frozen_version_num"
        ],
        "title": "DatasetFreezeOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      },
      "DatasetIn": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "default": "N/A"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "PRIVATE"
          }
        },
        "type": "object",
        "title": "DatasetIn"
      },
      "DatasetOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "default": "N/A"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "PRIVATE"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOut"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "user_views": {
            "type": "integer",
            "title": "User Views",
            "default": 0
          },
          "downloads": {
            "type": "integer",
            "title": "Downloads",
            "default": 0
          },
          "thumbnail_id": {
            "type": "string",
            "title": "Thumbnail Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "origin_id": {
            "type": "string",
            "title": "Origin Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "standard_license": {
            "type": "boolean",
            "title": "Standard License",
            "default": true
          },
          "license_id": {
            "type": "string",
            "title": "License Id"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "frozen": {
            "type": "boolean",
            "title": "Frozen",
            "default": false
          },
          "frozen_version_num": {
            "type": "integer",
            "title": "Frozen Version Num",
            "default": -999
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "creator"
        ],
        "title": "DatasetOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      },
      "DatasetPatch": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "title": "DatasetPatch"
      },
      "DatasetRoles": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id"
          },
          "user_roles": {
            "items": {
              "$ref": "#/components/schemas/UserAndRole"
            },
            "type": "array",
            "title": "User Roles",
            "default": []
          },
          "group_roles": {
            "items": {
              "$ref": "#/components/schemas/GroupAndRole"
            },
            "type": "array",
            "title": "Group Roles",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "dataset_id"
        ],
        "title": "DatasetRoles"
      },
      "EventListenerIn": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "default": "1.0"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "EventListenerIn",
        "description": "On submission, minimum info for a listener is name, version and description. Clowder will use name and version to locate queue."
      },
      "EventListenerJobDB": {
        "properties": {
          "listener_id": {
            "type": "string",
            "title": "Listener Id"
          },
          "resource_ref": {
            "$ref": "#/components/schemas/MongoDBRef"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOut"
          },
          "parameters": {
            "type": "object",
            "title": "Parameters"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "title": "Started"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "title": "Updated"
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "title": "Finished"
          },
          "duration": {
            "type": "number",
            "title": "Duration"
          },
          "latest_message": {
            "type": "string",
            "title": "Latest Message"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "CREATED"
          },
          "_id": {
            "type": "string",
            "title": " Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          }
        },
        "type": "object",
        "required": [
          "listener_id",
          "resource_ref",
          "creator"
        ],
        "title": "EventListenerJobDB",
        "description": "This summarizes a submission to an extractor. All messages from that extraction should include this job's ID."
      },
      "EventListenerJobOut": {
        "properties": {
          "listener_id": {
            "type": "string",
            "title": "Listener Id"
          },
          "resource_ref": {
            "$ref": "#/components/schemas/MongoDBRef"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOut"
          },
          "parameters": {
            "type": "object",
            "title": "Parameters"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "title": "Started"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "title": "Updated"
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "title": "Finished"
          },
          "duration": {
            "type": "number",
            "title": "Duration"
          },
          "latest_message": {
            "type": "string",
            "title": "Latest Message"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "CREATED"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          }
        },
        "type": "object",
        "required": [
          "listener_id",
          "resource_ref",
          "creator"
        ],
        "title": "EventListenerJobOut",
        "description": "This summarizes a submission to an extractor. All messages from that extraction should include this job's ID."
      },
      "EventListenerJobUpdateOut": {
        "properties": {
          "job_id": {
            "type": "string",
            "title": "Job Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          }
        },
        "type": "object",
        "required": [
          "job_id",
          "status"
        ],
        "title": "EventListenerJobUpdateOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      },
      "EventListenerOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "default": "1.0"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOut"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "lastAlive": {
            "type": "string",
            "format": "date-time",
            "title": "Lastalive"
          },
          "alive": {
            "type": "boolean",
            "title": "Alive"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": false
          },
          "properties": {
            "$ref": "#/components/schemas/ExtractorInfo"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "EventListenerOut",
        "description": "EventListeners have a name, version, author, description, and optionally properties where extractor_info will be saved."
      },
      "ExtractorInfo": {
        "properties": {
          "author": {
            "type": "string",
            "title": "Author"
          },
          "process": {
            "type": "object",
            "title": "Process"
          },
          "maturity": {
            "type": "string",
            "title": "Maturity",
            "default": "Development"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "default": ""
          },
          "contributors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Contributors",
            "default": []
          },
          "contexts": {
            "items": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "string",
                  "maxLength": 65536,
                  "minLength": 1,
                  "format": "uri"
                }
              ]
            },
            "type": "array",
            "title": "Contexts",
            "default": []
          },
          "repository": {
            "items": {
              "$ref": "#/components/schemas/Repository"
            },
            "type": "array",
            "title": "Repository",
            "default": []
          },
          "external_services": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "External Services",
            "default": []
          },
          "libraries": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Libraries",
            "default": []
          },
          "bibtex": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Bibtex",
            "default": []
          },
          "default_labels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Default Labels",
            "default": []
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Categories",
            "default": []
          },
          "parameters": {
            "type": "object",
            "title": "Parameters"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "default": "1.0"
          }
        },
        "type": "object",
        "title": "ExtractorInfo",
        "description": "Currently for extractor_info JSON from Clowder v1 extractors for use with to /api/extractors endpoint."
      },
      "FeedIn": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "search": {
            "$ref": "#/components/schemas/SearchObject"
          },
          "listeners": {
            "items": {
              "$ref": "#/components/schemas/FeedListener"
            },
            "type": "array",
            "title": "Listeners",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name",
          "search"
        ],
        "title": "FeedIn",
        "description": "A Job Feed is a saved set of search criteria with some number of Event Listeners that can be triggered when new\nresources match the saved search criteria for the Feed."
      },
      "FeedListener": {
        "properties": {
          "listener_id": {
            "type": "string",
            "title": "Listener Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "automatic": {
            "type": "boolean",
            "title": "Automatic"
          }
        },
        "type": "object",
        "required": [
          "listener_id",
          "automatic"
        ],
        "title": "FeedListener",
        "description": "This is a shorthand POST class for associating an existing EventListener with a Feed. The automatic flag determines\nwhether the Feed will automatically send new matches to the Event Listener."
      },
      "FeedOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "search": {
            "$ref": "#/components/schemas/SearchObject"
          },
          "listeners": {
            "items": {
              "$ref": "#/components/schemas/FeedListener"
            },
            "type": "array",
            "title": "Listeners",
            "default": []
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "creator": {
            "type": "string",
            "format": "email",
            "title": "Creator"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "name",
          "search"
        ],
        "title": "FeedOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      },
      "FileOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "default": "N/A"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "PRIVATE"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOut"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "version_id": {
            "type": "string",
            "title": "Version Id",
            "default": "N/A"
          },
          "version_num": {
            "type": "integer",
            "title": "Version Num",
            "default": 0
          },
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "folder_id": {
            "type": "string",
            "title": "Folder Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "views": {
            "type": "integer",
            "title": "Views",
            "default": 0
          },
          "downloads": {
            "type": "integer",
            "title": "Downloads",
            "default": 0
          },
          "bytes": {
            "type": "integer",
            "title": "Bytes",
            "default": 0
          },
          "content_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContentType"
              }
            ],
            "title": "Content Type",
            "default": {
              "content_type": "N/A",
              "main_type": "N/A"
            }
          },
          "thumbnail_id": {
            "type": "string",
            "title": "Thumbnail Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "storage_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StorageType"
              }
            ],
            "default": "minio"
          },
          "storage_path": {
            "type": "string",
            "title": "Storage Path"
          },
          "object_type": {
            "type": "string",
            "title": "Object Type",
            "default": "file"
          },
          "origin_id": {
            "type": "string",
            "title": "Origin Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "frozen": {
            "type": "boolean",
            "title": "Frozen",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "creator",
          "dataset_id"
        ],
        "title": "FileOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      },
      "FileVersion": {
        "properties": {
          "file_id": {
            "type": "string",
            "title": "File Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOut"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "version_id": {
            "type": "string",
            "title": "Version Id"
          },
          "version_num": {
            "type": "integer",
            "title": "Version Num",
            "default": 1
          },
          "bytes": {
            "type": "integer",
            "title": "Bytes",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "file_id",
          "creator",
          "version_id"
        ],
        "title": "FileVersion"
      },
      "FolderIn": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "default": "N/A"
          },
          "parent_folder": {
            "type": "string",
            "title": "Parent Folder",
            "example": "5eb7cf5a86d9755df3a6c593"
          }
        },
        "type": "object",
        "title": "FolderIn"
      },
      "FolderOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "default": "N/A"
          },
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "parent_folder": {
            "type": "string",
            "title": "Parent Folder",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOut"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "object_type": {
            "type": "string",
            "title": "Object Type",
            "default": "folder"
          },
          "origin_id": {
            "type": "string",
            "title": "Origin Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "frozen": {
            "type": "boolean",
            "title": "Frozen",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "creator"
        ],
        "title": "FolderOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      },
      "FolderPatch": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "parent_folder": {
            "type": "string",
            "title": "Parent Folder",
            "example": "5eb7cf5a86d9755df3a6c593"
          }
        },
        "type": "object",
        "title": "FolderPatch"
      },
      "GroupAndRole": {
        "properties": {
          "group": {
            "$ref": "#/components/schemas/GroupOut"
          },
          "role": {
            "$ref": "#/components/schemas/RoleType"
          }
        },
        "type": "object",
        "required": [
          "group",
          "role"
        ],
        "title": "GroupAndRole"
      },
      "GroupBase": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/Member"
            },
            "type": "array",
            "title": "Users",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "GroupBase"
      },
      "GroupIn": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/Member"
            },
            "type": "array",
            "title": "Users",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "GroupIn"
      },
      "GroupOut": {
        "properties": {
          "creator": {
            "type": "string",
            "format": "email",
            "title": "Creator"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/Member"
            },
            "type": "array",
            "title": "Users",
            "default": []
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "views": {
            "type": "integer",
            "title": "Views",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "creator",
          "name"
        ],
        "title": "GroupOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LegacyEventListenerIn": {
        "properties": {
          "author": {
            "type": "string",
            "title": "Author"
          },
          "process": {
            "type": "object",
            "title": "Process"
          },
          "maturity": {
            "type": "string",
            "title": "Maturity",
            "default": "Development"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "contributors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Contributors",
            "default": []
          },
          "contexts": {
            "items": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "string",
                  "maxLength": 65536,
                  "minLength": 1,
                  "format": "uri"
                }
              ]
            },
            "type": "array",
            "title": "Contexts",
            "default": []
          },
          "repository": {
            "items": {
              "$ref": "#/components/schemas/Repository"
            },
            "type": "array",
            "title": "Repository",
            "default": []
          },
          "external_services": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "External Services",
            "default": []
          },
          "libraries": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Libraries",
            "default": []
          },
          "bibtex": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Bibtex",
            "default": []
          },
          "default_labels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Default Labels",
            "default": []
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Categories",
            "default": []
          },
          "parameters": {
            "type": "object",
            "title": "Parameters"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "default": "1.0"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "LegacyEventListenerIn",
        "description": "v1 Extractors can submit data formatted as a LegacyEventListener (i.e. v1 format) and it will be converted to a v2 EventListener."
      },
      "LicenseBase": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "holders": {
            "type": "string",
            "title": "Holders"
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "title": "Expiration Date"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "LicenseBase"
      },
      "LicenseIn": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "holders": {
            "type": "string",
            "title": "Holders"
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "title": "Expiration Date"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "LicenseIn"
      },
      "LicenseOption": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "LicenseOption"
      },
      "LicenseOut": {
        "properties": {
          "creator": {
            "type": "string",
            "format": "email",
            "title": "Creator"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "holders": {
            "type": "string",
            "title": "Holders"
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "title": "Expiration Date"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          }
        },
        "type": "object",
        "required": [
          "creator",
          "name"
        ],
        "title": "LicenseOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      },
      "LocalFileIn": {
        "properties": {
          "path": {
            "type": "string",
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "path"
        ],
        "title": "LocalFileIn",
        "description": "Used when adding a file from a local disk."
      },
      "Member": {
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserOut"
          },
          "editor": {
            "type": "boolean",
            "title": "Editor",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "user"
        ],
        "title": "Member"
      },
      "MetadataAgent": {
        "properties": {
          "creator": {
            "$ref": "#/components/schemas/UserOut"
          },
          "listener": {
            "$ref": "#/components/schemas/EventListenerOut"
          }
        },
        "type": "object",
        "required": [
          "creator"
        ],
        "title": "MetadataAgent",
        "description": "Describes the user who created a piece of metadata. If listener is provided, user refers to the user who\ntriggered the job."
      },
      "MetadataConfig": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "str"
          }
        },
        "type": "object",
        "title": "MetadataConfig"
      },
      "MetadataDefinitionIn": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "required_for_items": {
            "$ref": "#/components/schemas/MetadataRequiredForItems"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "@context": {
            "items": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "string",
                  "maxLength": 65536,
                  "minLength": 1,
                  "format": "uri"
                }
              ]
            },
            "type": "array",
            "title": "@Context"
          },
          "context_url": {
            "type": "string",
            "title": "Context Url"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/MetadataField"
            },
            "type": "array",
            "title": "Fields"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "name",
          "required_for_items",
          "fields"
        ],
        "title": "MetadataDefinitionIn",
        "description": "This describes a metadata object with a short name and description, predefined set of fields, and context.\nThese provide a shorthand for use by listeners as well as a source for building GUI widgets to add new entries.\n\nExample: {\n    \"name\" : \"LatLon\",\n    \"description\" : \"A set of Latitude/Longitude coordinates\",\n    \"required_for_items\": {\n        \"datasets\": false,\n        \"files\": false\n    },\n    \"context\" : [\n        {\n        \"longitude\" : \"https://schema.org/longitude\",\n        \"latitude\" : \"https://schema.org/latitude\"\n        },\n    ],\n    \"fields\" : [\n        {\n            \"name\" : \"longitude\",\n            \"list\" : false,\n            \"widgetType\": \"TextField\",\n            \"config\": {\n                \"type\" : \"float\"\n            },\n            \"required\" : true\n        },\n        {\n            \"name\" : \"latitude\",\n            \"list\" : false,\n            \"widgetType\": \"TextField\",\n            \"config\": {\n                \"type\" : \"float\"\n            },\n            \"required\" : true\n        }\n    ]\n}"
      },
      "MetadataDefinitionOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "required_for_items": {
            "$ref": "#/components/schemas/MetadataRequiredForItems"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "@context": {
            "items": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "string",
                  "maxLength": 65536,
                  "minLength": 1,
                  "format": "uri"
                }
              ]
            },
            "type": "array",
            "title": "@Context"
          },
          "context_url": {
            "type": "string",
            "title": "Context Url"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/MetadataField"
            },
            "type": "array",
            "title": "Fields"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOut"
          }
        },
        "type": "object",
        "required": [
          "name",
          "required_for_items",
          "fields",
          "creator"
        ],
        "title": "MetadataDefinitionOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      },
      "MetadataDelete": {
        "properties": {
          "metadata_id": {
            "type": "string",
            "title": "Metadata Id"
          },
          "definition": {
            "type": "string",
            "title": "Definition"
          },
          "listener": {
            "$ref": "#/components/schemas/EventListenerIn"
          },
          "extractor": {
            "$ref": "#/components/schemas/LegacyEventListenerIn"
          }
        },
        "type": "object",
        "title": "MetadataDelete"
      },
      "MetadataEnumConfig": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "enum"
          },
          "options": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Options"
          }
        },
        "type": "object",
        "required": [
          "options"
        ],
        "title": "MetadataEnumConfig"
      },
      "MetadataField": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "list": {
            "type": "boolean",
            "title": "List",
            "default": false
          },
          "widgetType": {
            "type": "string",
            "title": "Widgettype",
            "default": "TextField"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MetadataEnumConfig"
              },
              {
                "$ref": "#/components/schemas/MetadataConfig"
              }
            ],
            "title": "Config"
          },
          "required": {
            "type": "boolean",
            "title": "Required",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "MetadataField"
      },
      "MetadataIn": {
        "properties": {
          "@context": {
            "items": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "string",
                  "maxLength": 65536,
                  "minLength": 1,
                  "format": "uri"
                }
              ]
            },
            "type": "array",
            "title": "@Context"
          },
          "context_url": {
            "type": "string",
            "title": "Context Url"
          },
          "definition": {
            "type": "string",
            "title": "Definition"
          },
          "content": {
            "type": "object",
            "title": "Content"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "file_version": {
            "type": "integer",
            "title": "File Version"
          },
          "listener": {
            "$ref": "#/components/schemas/EventListenerIn"
          },
          "extractor": {
            "$ref": "#/components/schemas/LegacyEventListenerIn"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "MetadataIn"
      },
      "MetadataOut": {
        "properties": {
          "@context": {
            "items": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "string",
                  "maxLength": 65536,
                  "minLength": 1,
                  "format": "uri"
                }
              ]
            },
            "type": "array",
            "title": "@Context"
          },
          "context_url": {
            "type": "string",
            "title": "Context Url"
          },
          "definition": {
            "type": "string",
            "title": "Definition"
          },
          "content": {
            "type": "object",
            "title": "Content"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "resource": {
            "$ref": "#/components/schemas/MongoDBRef"
          },
          "agent": {
            "$ref": "#/components/schemas/MetadataAgent"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "origin_id": {
            "type": "string",
            "title": "Origin Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "frozen": {
            "type": "boolean",
            "title": "Frozen",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "content",
          "resource",
          "agent"
        ],
        "title": "MetadataOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      },
      "MetadataPatch": {
        "properties": {
          "@context": {
            "items": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "string",
                  "maxLength": 65536,
                  "minLength": 1,
                  "format": "uri"
                }
              ]
            },
            "type": "array",
            "title": "@Context"
          },
          "context_url": {
            "type": "string",
            "title": "Context Url"
          },
          "definition": {
            "type": "string",
            "title": "Definition"
          },
          "content": {
            "type": "object",
            "title": "Content"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "file_version": {
            "type": "integer",
            "title": "File Version"
          },
          "listener": {
            "$ref": "#/components/schemas/EventListenerIn"
          },
          "extractor": {
            "$ref": "#/components/schemas/LegacyEventListenerIn"
          },
          "metadata_id": {
            "type": "string",
            "title": "Metadata Id"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "MetadataPatch"
      },
      "MetadataRequiredForItems": {
        "properties": {
          "datasets": {
            "type": "boolean",
            "title": "Datasets",
            "default": false
          },
          "files": {
            "type": "boolean",
            "title": "Files",
            "default": false
          }
        },
        "type": "object",
        "title": "MetadataRequiredForItems"
      },
      "MongoDBRef": {
        "properties": {
          "collection": {
            "type": "string",
            "title": "Collection"
          },
          "resource_id": {
            "type": "string",
            "title": "Resource Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "collection",
          "resource_id"
        ],
        "title": "MongoDBRef"
      },
      "PageMetadata": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          },
          "skip": {
            "type": "integer",
            "title": "Skip",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "default": 0
          }
        },
        "type": "object",
        "title": "PageMetadata"
      },
      "Paged": {
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "items": {},
            "type": "array",
            "title": "Data",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "metadata"
        ],
        "title": "Paged"
      },
      "Repository": {
        "properties": {
          "repository_type": {
            "type": "string",
            "title": "Repository Type",
            "default": "git"
          },
          "repository_url": {
            "type": "string",
            "title": "Repository Url",
            "default": ""
          }
        },
        "type": "object",
        "title": "Repository",
        "description": "Reference to a repository associated with Event Listener/Extractor."
      },
      "RoleType": {
        "type": "string",
        "enum": [
          "owner",
          "viewer",
          "uploader",
          "editor"
        ],
        "title": "RoleType",
        "description": "A user can have one of the following roles for a specific dataset. Since we don't currently implement permissions\nthere is an implied hierarchy between these roles OWNER > EDITOR > UPLOADER > VIEWER. For example, if a route\nrequires VIEWER any of the roles can access that resource."
      },
      "SearchCriteria": {
        "properties": {
          "field": {
            "type": "string",
            "title": "Field"
          },
          "operator": {
            "type": "string",
            "title": "Operator",
            "default": "=="
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "field",
          "value"
        ],
        "title": "SearchCriteria"
      },
      "SearchObject": {
        "properties": {
          "criteria": {
            "items": {
              "$ref": "#/components/schemas/SearchCriteria"
            },
            "type": "array",
            "title": "Criteria",
            "default": []
          },
          "mode": {
            "type": "string",
            "title": "Mode",
            "default": "and"
          },
          "original": {
            "type": "string",
            "title": "Original"
          }
        },
        "type": "object",
        "title": "SearchObject",
        "description": "This is a way to save a search (i.e. as a Feed).\n\nParameters:\n    criteria -- some number of field/operator/value tuples describing the search requirements\n    mode -- and/or determines whether all of the criteria must match, or any of them\n    original -- if the user originally performed a string search, their original text entry is preserved here"
      },
      "Status": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version",
            "default": "2.0.0-beta.2"
          }
        },
        "type": "object",
        "title": "Status"
      },
      "StorageType": {
        "type": "string",
        "enum": [
          "minio",
          "local",
          "remote",
          "aws"
        ],
        "title": "StorageType",
        "description": "Depending on the StorageType,the file may need different properties such as local path or URL.\nAlso, some StorageTypes do not support versioning or anonymous sharing."
      },
      "ThumbnailOut": {
        "properties": {
          "creator": {
            "$ref": "#/components/schemas/UserOut"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "bytes": {
            "type": "integer",
            "title": "Bytes",
            "default": 0
          },
          "content_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContentType"
              }
            ],
            "title": "Content Type",
            "default": {
              "content_type": "N/A",
              "main_type": "N/A"
            }
          },
          "downloads": {
            "type": "integer",
            "title": "Downloads",
            "default": 0
          },
          "origin_id": {
            "type": "string",
            "title": "Origin Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "frozen": {
            "type": "boolean",
            "title": "Frozen",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "creator"
        ],
        "title": "ThumbnailOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      },
      "UserAPIKeyOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "user": {
            "type": "string",
            "format": "email",
            "title": "User"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "title": "Expires"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          }
        },
        "type": "object",
        "required": [
          "name",
          "key",
          "user"
        ],
        "title": "UserAPIKeyOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      },
      "UserAndRole": {
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserOut"
          },
          "role": {
            "$ref": "#/components/schemas/RoleType"
          }
        },
        "type": "object",
        "required": [
          "user",
          "role"
        ],
        "title": "UserAndRole"
      },
      "UserIn": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "first_name",
          "last_name",
          "password"
        ],
        "title": "UserIn"
      },
      "UserLogin": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserLogin"
      },
      "UserOut": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "admin": {
            "type": "boolean",
            "title": "Admin",
            "default": false
          },
          "admin_mode": {
            "type": "boolean",
            "title": "Admin Mode",
            "default": false
          },
          "read_only_user": {
            "type": "boolean",
            "title": "Read Only User",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "email",
          "first_name",
          "last_name"
        ],
        "title": "UserOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VisualizationConfigIn": {
        "properties": {
          "resource": {
            "$ref": "#/components/schemas/MongoDBRef"
          },
          "extractor_info": {
            "$ref": "#/components/schemas/ExtractorInfo"
          },
          "job": {
            "$ref": "#/components/schemas/EventListenerJobDB"
          },
          "client": {
            "type": "string",
            "title": "Client"
          },
          "parameters": {
            "type": "object",
            "title": "Parameters",
            "default": {}
          },
          "visualization_component_id": {
            "type": "string",
            "title": "Visualization Component Id"
          },
          "visualization_mimetype": {
            "type": "string",
            "title": "Visualization Mimetype"
          }
        },
        "type": "object",
        "required": [
          "resource",
          "visualization_component_id",
          "visualization_mimetype"
        ],
        "title": "VisualizationConfigIn"
      },
      "VisualizationConfigOut": {
        "properties": {
          "resource": {
            "$ref": "#/components/schemas/MongoDBRef"
          },
          "extractor_info": {
            "$ref": "#/components/schemas/ExtractorInfo"
          },
          "job": {
            "$ref": "#/components/schemas/EventListenerJobDB"
          },
          "client": {
            "type": "string",
            "title": "Client"
          },
          "parameters": {
            "type": "object",
            "title": "Parameters",
            "default": {}
          },
          "visualization_component_id": {
            "type": "string",
            "title": "Visualization Component Id"
          },
          "visualization_mimetype": {
            "type": "string",
            "title": "Visualization Mimetype"
          },
          "origin_id": {
            "type": "string",
            "title": "Origin Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "frozen": {
            "type": "boolean",
            "title": "Frozen",
            "default": true
          },
          "visualization_data": {
            "items": {
              "$ref": "#/components/schemas/VisualizationDataOut"
            },
            "type": "array",
            "title": "Visualization Data",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "resource",
          "visualization_component_id",
          "visualization_mimetype"
        ],
        "title": "VisualizationConfigOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      },
      "VisualizationDataOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "default": "N/A"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOut"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "bytes": {
            "type": "integer",
            "title": "Bytes",
            "default": 0
          },
          "content_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContentType"
              }
            ],
            "title": "Content Type",
            "default": {
              "content_type": "N/A",
              "main_type": "N/A"
            }
          },
          "visualization_config_id": {
            "type": "string",
            "title": "Visualization Config Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "origin_id": {
            "type": "string",
            "title": "Origin Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "MongoDB document ObjectID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "frozen": {
            "type": "boolean",
            "title": "Frozen",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "creator",
          "visualization_config_id"
        ],
        "title": "VisualizationDataOut",
        "description": "Document Mapping class.\n\nFields:\n\n- `id` - MongoDB document ObjectID \"_id\" field.\nMapped to the PydanticObjectId class"
      }
    },
    "securitySchemes": {
      "OAuth2AuthorizationCodeBearer": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "scopes": {},
            "authorizationUrl": "http://localhost:8080/auth/realms/clowder/protocol/openid-connect/auth?client_id=clowder2-backend&response_type=code",
            "tokenUrl": "http://localhost:8080/keycloak/realms/clowder/protocol/openid-connect/token"
          }
        }
      },
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      },
      "APIKeyCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "Authorization"
      },
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}